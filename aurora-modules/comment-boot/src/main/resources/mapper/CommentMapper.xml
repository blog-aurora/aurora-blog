<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.xcye.comment.dao.CommentMapper">

    <resultMap id="BaseResultMap" type="xyz.xcye.comment.po.Comment">
            <id property="uid" column="uid" jdbcType="BIGINT"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="site" column="site" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="commentIp" column="comment_ip" jdbcType="VARCHAR"/>
            <result property="operationSystemInfo" column="operation_system_info" jdbcType="VARCHAR"/>
            <result property="showComment" column="is_show_comment" jdbcType="TINYINT"/>
            <result property="replyCommentUid" column="reply_comment_uid" jdbcType="BIGINT"/>
            <result property="emailNotice" column="is_email_notice" jdbcType="TINYINT"/>
            <result property="path" column="path" jdbcType="VARCHAR"/>
            <result property="nextCommentUidArray" column="next_comment_uid_array" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="userUid" column="user_uid" jdbcType="BIGINT"/>
            <result property="delete" column="is_delete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        uid,username,avatar,
        site,email,create_time,
        update_time,comment_ip,operation_system_info,
        is_show_comment,reply_comment_uid,is_email_notice,
        path,next_comment_uid_array,content,
        user_uid,is_delete
    </sql>

    <select id="queryAllComment" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from au_comment
        <where>
            <if test="condition.startTime != null and condition.endTime != null">
                and create_time between #{condition.startTime} and #{condition.endTime}
            </if>
            <if test="condition.uid != null">
                and uid=#{condition.uid}
            </if>
            <if test="condition.otherUid != null">
                and user_uid=#{condition.otherUid}
            </if>
            <if test="condition.keyword != null">
                and username like concat('%', #{condition.keyword  }, '%')
            </if>
            <if test="condition.status != null">
                and is_delete=#{condition.delete}
            </if>
        </where>
    </select>

    <delete id="deleteComment" parameterType="java.lang.Long">
        delete from au_comment
        where  uid = #{uid,jdbcType=BIGINT} 
    </delete>

    <insert id="insertComment" keyColumn="uid" keyProperty="uid" parameterType="xyz.xcye.comment.po.Comment" useGeneratedKeys="true">
        insert into au_comment
        ( uid,username,avatar
        ,site,email,create_time
        ,update_time,comment_ip,operation_system_info
        ,is_show_comment,reply_comment_uid,is_email_notice
        ,path,next_comment_uid_array,content
        ,user_uid,is_delete)
        values (#{uid,jdbcType=BIGINT},#{username,jdbcType=VARCHAR},#{avatar,jdbcType=VARCHAR}
        ,#{site,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP}
        ,#{updateTime,jdbcType=TIMESTAMP},#{commentIp,jdbcType=VARCHAR},#{operationSystemInfo,jdbcType=VARCHAR}
        ,#{showComment,jdbcType=TINYINT},#{replyCommentUid,jdbcType=BIGINT},#{emailNotice,jdbcType=TINYINT}
        ,#{path,jdbcType=VARCHAR},#{nextCommentUidArray,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR}
        ,#{userUid,jdbcType=BIGINT},#{delete,jdbcType=TINYINT})
    </insert>

    <update id="updateComment" parameterType="xyz.xcye.comment.po.Comment">
        update au_comment
        <set>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="avatar != null">
                    avatar = #{avatar,jdbcType=VARCHAR},
                </if>
                <if test="site != null">
                    site = #{site,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
                <if test="commentIp != null">
                    comment_ip = #{commentIp,jdbcType=VARCHAR},
                </if>
                <if test="operationSystemInfo != null">
                    operation_system_info = #{operationSystemInfo,jdbcType=VARCHAR},
                </if>
                <if test="showComment != null">
                    is_show_comment = #{showComment,jdbcType=TINYINT},
                </if>
                <if test="replyCommentUid != null">
                    reply_comment_uid = #{replyCommentUid,jdbcType=BIGINT},
                </if>
                <if test="emailNotice != null">
                    is_email_notice = #{emailNotice,jdbcType=TINYINT},
                </if>
                <if test="path != null">
                    `path` = #{path,jdbcType=VARCHAR},
                </if>
                <if test="nextCommentUidArray != null">
                    next_comment_uid_array = #{nextCommentUidArray,jdbcType=VARCHAR},
                </if>
                <if test="content != null">
                    content = #{content,jdbcType=VARCHAR},
                </if>
                <if test="userUid != null">
                    user_uid = #{userUid,jdbcType=BIGINT},
                </if>
        </set>
        where   uid = #{uid,jdbcType=BIGINT} 
    </update>

    <update id="updateDeleteStatus" parameterType="xyz.xcye.comment.po.Comment">
        update au_comment
        set 
            is_delete=#{comment.delete}
        where   uid = #{uid,jdbcType=BIGINT} 
    </update>
</mapper>
