<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.xcye.admin.dao.UserDao">

    <resultMap id="userResultMap" type="xyz.xcye.admin.po.User">
        <result column="is_verify_email" property="verifyEmail"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="is_delete" property="delete"/>
    </resultMap>

    <insert id="insertUser">
        insert into au_user (
         uid,user_summary,nickname,gender,login_uid,
         site_uid,avatar,password,username,profession,is_verify_email,
         email_uid,user_account_uid,create_time,update_time,is_delete
         )

         values (
                 #{user.uid},#{user.userSummary},#{user.nickname},#{user.gender},#{user.loginUid},
                 #{user.siteUid},#{user.avatar},#{user.password},#{user.username},
                 #{user.profession},#{user.verifyEmail},#{user.emailUid},#{user.userAccountUid},
                 #{user.createTime},#{user.updateTime},#{user.delete}
                )
    </insert>

    <update id="updateUser">
        update
            au_user
        <set>
            <if test="user.userSummary != null">
                user_summary=#{user.userSummary},
            </if>
            <if test="user.nickname != null">
                nickname=#{user.nickname},
            </if>
            <if test="user.gender != null">
                gender=#{user.gender},
            </if>
            <if test="user.avatar != null">
                avatar=#{user.avatar},
            </if>
            <if test="user.username != null">
                username=#{user.username},
            </if>
            <if test="user.password != null">
                password=#{user.password},
            </if>
            <if test="user.profession != null">
                profession=#{user.profession},
            </if>
            <if test="user.verifyEmail != null">
                is_verify_email=#{user.verifyEmail},
            </if>
            <if test="user.updateTime != null">
                update_time=#{user.updateTime},
            </if>
            <if test="user.userAccountUid != null">
                user_account_uid=#{user.userAccountUid}
            </if>
            <if test="user.emailUid != null">
                email_uid=#{user.emailUid},
            </if>
            <if test="user.delete != null">
                is_delete=#{user.delete}
            </if>
        </set>
        where
            uid=#{user.uid}
    </update>

    <delete id="deleteByUid">
        delete from
            au_user
        where
            uid=#{uid}
    </delete>

    <select id="queryAllByCondition" resultMap="userResultMap">
        select
            uid,user_summary,nickname,gender,login_uid,
            site_uid,avatar,password,username,profession,is_verify_email,
            email_uid,user_account_uid,create_time,update_time,is_delete
        from
            au_user
        <where>
            <if test="condition.startTime != null and condition.endTime != null">
                and create_time between #{condition.startTime} and #{condition.endTime}
            </if>
            <if test="condition.uid != null">
                and uid=#{condition.uid}
            </if>
            <if test="condition.keyword != null">
                and username like concat('%', #{condition.keyword}, '%')
            </if>
            <if test="condition.otherUid != null">
                and user_account_uid=#{condition.otherUid}
            </if>
            <if test="condition.otherUid != null">
                and is_verify_email=#{condition.status}
            </if>
        </where>
    </select>
</mapper>