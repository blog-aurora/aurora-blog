services:
  mysql:
    hostname: mysqlHost
    env_file:
      - ./.env.mysql
    container_name: mysql8_db
    image: mysql:8.1.0
    expose:
      - "${PROJECT_MYSQL_PORT:-3306}:3306"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
      - type: bind
        source: ./config/mysql/conf.d
        target: /etc/mysql/conf.d
        read_only: true
      - type: bind
        source: ../../docs/mysql/v2/table-data
        target: /docker-entrypoint-initdb.d
    ports:
      - "0.0.0.0:${PROJECT_MYSQL_PORT:-3306}:3306"
    restart: ${RESTART_OPTION:-no}
    networks:
      - mysqlNetwork
      - microNetwork
  nacos_standalone:
    env_file:
      - ./.env.nacos
    image: nacos/nacos-server:${NACOS_VERSION}
    hostname: nacosStandaloneHost
    container_name: nacos_standalone
    restart: ${RESTART_OPTION:-no}
    #    command: sh -c "echo 'doing exec a chmod shell' && chmod 777 /home/nacos/check-shell/wait-for && /home/nacos/check-shell/wait-for www.eficode.com:80 -- echo 'Eficode site is up' "
    depends_on:
      - mysql
    ports:
      - "0.0.0.0:8848:8848"
      - "0.0.0.0:9849:9849"
      - "0.0.0.0:9848:9848"
      - "0.0.0.0:7848:7848"
    networks:
      - nacosNetwork
      - microNetwork
    volumes:
      - type: volume
        source: nacos_standalone_data
        target: /home/nacos
      - ${WORK_DIR}/nacos/logs:/home/nacos/logs
      - ./config/nacos:/home/nacos/conf:ro
      - ${WORK_DIR}/nacos/init.d:/home/nacos/init.d
      - ./shell:/home/nacos/check-shell
  rabbitmq:
    container_name: rabbitMq_host
    hostname: dockerRabbitmq
    image: rabbitmq:3.12.4-management
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: Aurora2023@*
    volumes:
      - ${WORK_DIR}/rabbitmq/log:/var/log/rabbitmq:rw
      #- /opt/docker/project/rabbitmq/conf:/etc/rabbitmq:rw
      - type: volume
        source: rabbitmq_data
        target: /var/lib/rabbitmq
    ports:
      - "0.0.0.0:5672:5672"
      - "0.0.0.0:15672:15672"
    restart: ${RESTART_OPTION:-no}
    networks:
      - rabbitmqNetwork
      - microNetwork
  seata-server:
    container_name: seata-server
    image: xcyeye/seata:1.7.0
    hostname: seataServer
    restart: ${RESTART_OPTION:-no}
    depends_on:
      - nacos_standalone
    env_file:
      - ./.env.seata
    ports:
      - "0.0.0.0:18091:8091"
      - "0.0.0.0:17091:7091"
    networks:
      - seataNetwork
      - microNetwork
    volumes:
      - ${WORK_DIR}/seata/logs:/seata-server/logs
      - type: bind
        source: ./config/seata
        target: /seata-server/conf
  redis:
    hostname: redisHost
    container_name: redisDb
    image: redis:7.2.1
    expose:
      - "35680:3306"
    volumes:
      - type: volume
        source: redis_data
        target: /data
      - ./config/redis:/usr/local/etc/redis:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "0.0.0.0:35680:3306"
    restart: ${RESTART_OPTION:-no}
    networks:
      - redisNetwork
      - microNetwork
volumes:
  mysql_data:
    name: mysql_data_volume
    driver: local
  nacos_standalone_data:
    name: nacos_standalone_data
    driver: local
  rabbitmq_data:
    name: rabbitmq_data_volume
    driver: local
  redis_data:
    name: redis_data_volume
    driver: local
networks:
  # mysql自己的网络
  mysqlNetwork:
    name: mysqlNetwork
    driver: bridge
    external: false
  nacosNetwork:
    name: nacosNetwork
    driver: bridge
    external: false
  rabbitmqNetwork:
    driver: bridge
    name: rabbitmqNetwork
    external: false
  redisNetwork:
    name: redisNetwork
    driver: bridge
    external: false
  seataNetwork:
    name: seataNetwork
    driver: bridge
    external: false
  # 微服务环境网络
  microNetwork:
    name: microNetwork
    driver: bridge
    external: false
