<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.xcye.message.dao.EmailDao">

    <insert id="insertEmail" keyColumn="uid">
        insert into au_email
        (uid,
        reply_comment_template,verify_account_template,notice_template,receive_comment_template,
        email,is_delete,port,
        reply_comment_subject,verify_account_subject,receive_comment_subject,notice_subject,
        user_uid,email_host,email_password,protocol,create_time,update_time)

        values (
        #{email.uid},#{email.replyCommentTemplate},#{email.verifyAccountTemplate},#{email.noticeTemplate},#{email.receiveCommentTemplate},
        #{email.email},#{email.deleteStatus},#{email.port},
        #{email.replyCommentSubject},#{email.verifyAccountSubject},#{email.receiveCommentSubject},#{email.noticeSubject}
        ,#{email.userUid},#{email.emailHost},#{email.emailPassword},#{email.protocol},#{email.createTime},#{email.updateTime}
        )
    </insert>

    <update id="updateEmailByUid">
        update au_email
        <set>
            <if test="email.noticeSubject != null">
                notice_subject=#{email.noticeSubject}
            </if>
            <if test="email.receiveCommentSubject != null">
                receive_comment_subject=#{email.receiveCommentSubject}
            </if>
            <if test="email.verifyAccountSubject != null">
                verify_account_subject=#{email.verifyAccountSubject}
            </if>
            <if test="email.replyCommentSubject != null">
                reply_comment_subject=#{email.replyCommentSubject}
            </if>
            <if test="email.email != null">
                email=#{email.email}
            </if>
            <if test="email.receiveCommentTemplate != null">
                receive_comment_template=#{email.receiveCommentTemplate}
            </if>
            <if test="email.noticeTemplate != null">
                notice_template=#{email.noticeTemplate}
            </if>
            <if test="email.verifyAccountTemplate != null">
                verify_account_template=#{email.verifyAccountTemplate}
            </if>
            <if test="email.replyCommentTemplate != null">
                reply_comment_template=#{email.replyCommentTemplate}
            </if>
            <if test="email.protocol != null">
                protocol=#{email.protocol}
            </if>
            <if test="email.emailPassword != null">
                email_password=#{email.emailPassword}
            </if>
            <if test="email.emailHost != null">
                email_host=#{email.emailHost}
            </if>
            <if test="email.noticeTemplate != null">
                user_uid=#{email.userUid}
            </if>
            <if test="email.delete != null">
                is_delete=#{email.delete}
            </if>
            <if test="email.port != null">
                port=#{email.port}
            </if>
            <if test="email.updateTime != null">
                update_time=#{email.updateTime}
            </if>
        </set>

        where uid=#{email.uid}
    </update>

    <update id="deleteEmailByUid">
        delete from au_email where uid=#{uid}
    </update>
    <update id="updateDeleteStatus">
        update au_email set is_delete=#{email.delete} where uid=#{email.uid}
    </update>

    <select id="queryAllEmail" resultMap="emailMap">
        select uid,
        reply_comment_template,verify_account_template,notice_template,receive_comment_template,
        email,is_delete,port,
        reply_comment_subject,verify_account_subject,receive_comment_subject,notice_subject,
        user_uid,email_host,protocol,create_time,update_time from au_email

        <where>
            <if test="email.noticeSubject != null">
                notice_subject like contact('%',#{email.noticeSubject},'%')
            </if>
            <if test="email.receiveCommentSubject != null">
                and receive_comment_subject like contact('%',#{email.receiveCommentSubject},'%')
            </if>
            <if test="email.verifyAccountSubject != null">
                and verify_account_subject like contact('%',#{email.verifyAccountSubject},'%')
            </if>
            <if test="email.replyCommentSubject != null">
                and reply_comment_subject like contact('%',#{email.replyCommentSubject},'%')
            </if>
            <if test="email.email != null">
                and email like contact('%',#{email.email},'%')
            </if>
            <if test="email.receiveCommentTemplate != null">
                and receive_comment_template=#{email.receiveCommentTemplate}
            </if>
            <if test="email.noticeTemplate != null">
                and notice_template=#{email.noticeTemplate}
            </if>
            <if test="email.verifyAccountTemplate != null">
                and verift_account_template=#{email.verifyAccountTemplate}
            </if>
            <if test="email.replyCommentTemplate != null">
                and reply_comment_template=#{email.replyCommentTemplate}
            </if>
            <if test="email.protocol != null">
                and protocol like contact('%',#{email.protocol},'%')
            </if>
            <if test="email.emailHost != null">
                and email_host like contact('%',#{email.emailHost},'%')
            </if>
            <if test="email.noticeTemplate != null">
                and user_uid=#{email.userUid}
            </if>
            <if test="email.uid != null">
                and uid=#{email.uid}
            </if>
            <if test="email.delete != null">
                and is_delete=#{email.delete}
            </if>
        </where>
    </select>

    <resultMap id="emailMap" type="xyz.xcye.common.dos.EmailDO">
        <id column="uid" property="uid"/>
        <result column="userUid" property="userUid"/>
        <result column="email_host" property="emailHost"/>
        <result column="protocol" property="protocol"/>
        <result column="reply_comment_template" property="replyCommentTemplate"/>
        <result column="verify_Account_template" property="verifyAccountTemplate"/>
        <result column="notice_template" property="noticeTemplate"/>
        <result column="receive_comment_template" property="receiveCommentTemplate"/>
        <result column="email" property="email"/>
        <result column="is_delete" property="delete"/>
        <result column="port" property="port"/>
        <result column="reply_comment_subject" property="replyCommentSubject"/>
        <result column="verify_account_subject" property="verifyAccountSubject"/>
        <result column="receive_comment_subject" property="receiveCommentSubject"/>
        <result column="notice_subject" property="noticeSubject"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="queryByUid" resultMap="emailMap">
        select uid,
               reply_comment_template,verify_account_template,notice_template,receive_comment_template,
               email,is_delete,port,
               reply_comment_subject,verify_account_subject,receive_comment_subject,notice_subject,
               user_uid,email_host,protocol,create_time,update_time from au_email
        where uid=#{uid}
    </select>
    <select id="queryByUserUid" resultMap="emailMap">
        select uid,
               reply_comment_template,verify_account_template,notice_template,receive_comment_template,
               email,is_delete,port,
               reply_comment_subject,verify_account_subject,receive_comment_subject,notice_subject,
               user_uid,email_host,protocol,create_time,update_time from au_email
        where user_uid=#{userUid}
    </select>
</mapper>