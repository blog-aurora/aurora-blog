<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.xcye.message.dao.MessageLogDao">


    <insert id="insertMessageLog">
        insert into au_message_log
        (uid,message,exchange,queue,routing_key,try_count,consume_status,create_time,update_time,exchange_type,ack_status,error_message)
        values (
                #{messageDO.uid},#{messageDO.message},#{messageDO.exchange},#{messageDO.queue},#{messageDO.routingKey},
                #{messageDO.tryCount},#{messageDO.consumeStatus},#{messageDO.createTime},#{messageDO.updateTime},
                #{messageDO.exchangeType},#{messageDO.ackStatus},#{messageDO.errorMessage}
        )
    </insert>

    <update id="updateMessageLog">
        update au_message_log
        <set>
            <if test="messageDO.message != null">
                message=#{messageDO.message},
            </if>
            <if test="messageDO.exchange != null">
                exchange=#{messageDO.exchange},
            </if>
            <if test="messageDO.queue != null">
                queue=#{messageDO.queue},
            </if>
            <if test="messageDO.routingKey != null">
                routing_key=#{messageDO.routingKey},
            </if>
            <if test="messageDO.tryCount != null">
                try_count=#{messageDO.tryCount},
            </if>
            <if test="messageDO.consumeStatus != null">
                consume_status=#{messageDO.consumeStatus},
            </if>
            <if test="messageDO.updateTime != null">
                update_time=#{messageDO.updateTime},
            </if>
            <if test="messageDO.exchangeType != null">
                exchange_type=#{messageDO.exchangeType},
            </if>
            <if test="messageDO.ackStatus != null">
                ack_status=#{messageDO.ackStatus},
            </if>
            <if test="messageDO.errorMessage != null">
                error_message=#{messageDO.errorMessage}
            </if>

        </set>
        where uid=#{messageDO.uid}
    </update>
    <delete id="deleteMessageLog">
        delete from au_message_log where uid=#{uid}
    </delete>
    <select id="queryAllMessageLog" resultType="xyz.xcye.common.dos.MessageLogDO">
        select uid,message,exchange,queue,routing_key,try_count,consume_status,create_time,update_time,exchange_type,ack_status,error_message
        from au_message_log
        <where>
            <if test="messageDO.message != null">
                message=#{messageDO.message}
            </if>
            <if test="messageDO.exchange != null">
                and exchange=#{messageDO.exchange}
            </if>
            <if test="messageDO.queue != null">
                and queue=#{messageDO.queue}
            </if>
            <if test="messageDO.routingKey != null">
                and routing_key=#{messageDO.routingKey}
            </if>
            <if test="messageDO.tryCount != null">
                and try_count=#{messageDO.tryCount}
            </if>
            <if test="messageDO.consumeStatus != null">
                and consume_status=#{messageDO.consumeStatus}
            </if>
            <if test="messageDO.createTime != null">
                and create_time=#{messageDO.createTime}
            </if>
            <if test="messageDO.updateTime != null">
                and update_time=#{messageDO.updateTime}
            </if>
            <if test="messageDO.exchangeType != null">
                and exchange_type=#{messageDO.exchangeType}
            </if>
            <if test="messageDO.ackStatus != null">
                and ack_status=#{messageDO.ackStatus}
            </if>
            <if test="messageDO.errorMessage != null">
                and error_message=#{messageDO.errorMessage}
            </if>
        </where>
    </select>
    <select id="queryByUid" resultType="xyz.xcye.common.dos.MessageLogDO">
        select uid,message,exchange,queue,routing_key,try_count,consume_status,create_time,update_time,exchange_type,ack_status,error_message
        from au_message_log
        where uid=#{uid}
    </select>
</mapper>